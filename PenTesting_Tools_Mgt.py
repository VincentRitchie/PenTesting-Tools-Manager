import subprocess

class PentestingTool:
    def __init__(self, name, description, command):
        self.name = name
        self.description = description
        self.command = command

    def run(self, parameters=""):
        full_command = f"{self.command} {parameters}"
        print(f"Running: {full_command}")
        try:
            result = subprocess.run(full_command, shell=True, check=True, text=True, capture_output=True)
            print(result.stdout)
        except subprocess.CalledProcessError as e:
            print(f"Error: {e}")

class PentestingToolsManager:
    def __init__(self):
        self.tools = []

    def add_tool(self, tool):
        self.tools.append(tool)
        print(f"Added tool: {tool.name}")

    def remove_tool(self, tool_name):
        self.tools = [tool for tool in self.tools if tool.name != tool_name]
        print(f"Removed tool: {tool_name}")

    def list_tools(self):
        if not self.tools:
            print("No tools available.")
        else:
            for tool in self.tools:
                print(f"Tool: {tool.name}, Description: {tool.description}")

    def run_tool(self, tool_name, parameters=""):
        for tool in self.tools:
            if tool.name == tool_name:
                tool.run(parameters)
                break
        else:
            print(f"Tool {tool_name} not found.")

def main():
    manager = PentestingToolsManager()

    while True:
        print("\nPentesting Tools Manager")
        print("1. Add Tool")
        print("2. Remove Tool")
        print("3. List Tools")
        print("4. Run Tool")
        print("5. Exit")
        
        choice = input("Enter your choice: ")

        if choice == "1":
            name = input("Enter tool name: ")
            description = input("Enter tool description: ")
            command = input("Enter tool command: ")
            tool = PentestingTool(name, description, command)
            manager.add_tool(tool)
        elif choice == "2":
            name = input("Enter tool name to remove: ")
            manager.remove_tool(name)
        elif choice == "3":
            manager.list_tools()
        elif choice == "4":
            name = input("Enter tool name to run: ")
            parameters = input("Enter parameters (optional): ")
            manager.run_tool(name, parameters)
        elif choice == "5":
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()